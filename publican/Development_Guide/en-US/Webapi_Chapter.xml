<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Development_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="web-chapter">
  <title>HTTP</title>
  <section id="web-http">
    <title>HTTP interface</title>
    <para>Server JavaScript modules instance methods can be remotely invoked over  network using simple  GET or POST HTTP requests.</para>
    <para>To make the module instance methods  available for external requests, mark it with the <code>@public</code> annotation. </para>
    <para>To invoke a server method, send a request by the URL formed using the base URL of the Servlet and the <filename>/api</filename> suffix for accessing HTTP API. </para>
    <para>Specify the request type, the module name, the method name and parameters of method calling in the URL parameters or in the body of the POST request in the <classname>application/x-www-form-urlencoded</classname> format. The request body will contain a value, which was returned in the executed method. </para>
    <para>If the JavaScript object is returned, it will be serialized as JSON; if the object of the <classname>String</classname> or XML type is returned, it will be returned as a string, it is also possible to specify the response content type explicitly.</para>
    <para>Parameters of the module method execution request:</para>
    <informaltable>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Parameter</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>__type</parameter>
            </entry>
            <entry>Request type. To execute the server module method, this parameter should be set to <literal>14</literal>.</entry>
          </row>
          <row>
            <entry>
              <parameter>__moduleName</parameter>
            </entry>
            <entry>
              <para>Module identifier.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>__methodName</parameter>
            </entry>
            <entry>Name of the called module method.</entry>
          </row>
          <row>
            <entry>
              <parameter>__param</parameter>
            </entry>
            <entry>Method calling parameter — a single value, a string, a number or a serialized JavaScript object in the JSON format.</entry>
          </row>
          <row>
            <entry>
              <parameter>__param[]</parameter>
            </entry>
            <entry>Method calling parameter — several values, a string, a number or a serialized JavaScript object in the JSON format.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>Example of URL for calling a server module method (URL is not encoded):</para>
    <para><uri>http://server/platypus/application/api?__type=14&amp;__moduleName=TestModule&amp;__methodName=say&amp;__param[]=Hello Platypus&amp;__param[]=1</uri></para>
  </section>
  <section id="web-req-resp">
    <title>HTTP request and response API</title>
    <para>To access HTTP request and response in the JavaScript server code, use the <code>http</code> property, which is available, if the method is called by the external HTTP request.</para>
    <programlisting language="JavaScript">function ModuleConstructor() {
   var http = this.http;
   
   /**
   * @public
   */
   this.doSomething() {
       //..
   }
}</programlisting>
    <para>The  <code>http</code> property contains the following objects:</para>
    <informaltable>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Property </entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>request</parameter>
            </entry>
            <entry>An object, which contains HTTP request data.</entry>
          </row>
          <row>
            <entry>
              <parameter>response</parameter>
            </entry>
            <entry>
              <para>HTTP response object.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>The  <code>request</code> object contains the following properties:</para>
    <informaltable>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Property </entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>authType</parameter>
            </entry>
            <entry>Authentication scheme name.</entry>
          </row>
          <row>
            <entry>
              <parameter>characterEncoding</parameter>
            </entry>
            <entry>
              <para>Character encoding name.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>contentLength</parameter>
            </entry>
            <entry>
              <para>Request body length in bytes or -1, if the length is unknown.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>contentType</parameter>
            </entry>
            <entry>
              <para>MIME type of the request body or <code>null</code> if the type is unknown.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>body</parameter>
            </entry>
            <entry>
              <para>Request body as a string.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>bodyBuffer</parameter>
            </entry>
            <entry>
              <para>Request body as a bytes array.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>contextPath</parameter>
            </entry>
            <entry>
              <para>Part of URL, the request context.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>cookies</parameter>
            </entry>
            <entry>Cookies which were sent by the client in the request in the &quot;key-value&quot; form.</entry>
          </row>
          <row>
            <entry>
              <parameter>headers</parameter>
            </entry>
            <entry>
              <para>Request headers in the &quot;key-value&quot; form.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>localAddr</parameter>
            </entry>
            <entry>
              <para>IP address, on which the request was received.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>localName</parameter>
            </entry>
            <entry>
              <para>Иame of the host, on which the request was received.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>localPort</parameter>
            </entry>
            <entry>
              <para>Port, on which the request was received.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>method</parameter>
            </entry>
            <entry>
              <para>Request method HTTP name, for example <literal>GET</literal>, <literal>POST</literal>.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>params</parameter>
            </entry>
            <entry>
              <para>Request parameters in the &quot;key-value&quot; form. If several parameters have the same name, their values will be presented as an array.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>pathInfo</parameter>
            </entry>
            <entry>
              <para>Additional information about the path in the request URL.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>pathTranslated</parameter>
            </entry>
            <entry>
              <para>Additional information about the path in the request URL, worked out to the real path.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>protocol</parameter>
            </entry>
            <entry>
              <para>Request protocol name and version in the form of protocol/majorVersion.minorVersion, for example, <literal>HTTP/1.1</literal>.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>queryString</parameter>
            </entry>
            <entry>
              <para>URL request string.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>remoteAddr</parameter>
            </entry>
            <entry>
              <para>IP address of the client or last proxy.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>remoteHost</parameter>
            </entry>
            <entry>
              <para>Fully qualified name of the client or last proxy.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>remotePort</parameter>
            </entry>
            <entry>
              <para>Port of the client or last proxy.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>requestURI</parameter>
            </entry>
            <entry>
              <para>A part of the URL request from the protocol name to the request string.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>requestURL</parameter>
            </entry>
            <entry>
              <para> URL of the request.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>scheme</parameter>
            </entry>
            <entry>
              <para>Request pattern, for example <literal>http</literal>, <literal>https</literal>, or  <literal>ftp</literal>.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>serverName</parameter>
            </entry>
            <entry>Name of the host, to which the request was sent.</entry>
          </row>
          <row>
            <entry>
              <parameter>serverPort</parameter>
            </entry>
            <entry>
              <para>Port, to which the request was sent.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>secure</parameter>
            </entry>
            <entry>
              <para>Flag which shows that the request was sent via the secured channel, for example HTTPS.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>In the example below, all request headers are output into the log:</para>
    <programlisting language="JavaScript">for (var c in http.response.headers) {
    Logger.info(c + &apos; - &apos; + http.response.headers[c]);
}</programlisting>
    <para>The  <code>response</code> object contains the following properties and methods:</para>
    <informaltable>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Property/method</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>status</parameter>
            </entry>
            <entry>
              <para>Current status of the response.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>contentType</parameter>
            </entry>
            <entry>
              <para>MIME type of the response body.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>body</parameter>
            </entry>
            <entry>
              <para>The text body sent in this response. The body must be set after content type. Note that content length is set automatically.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>bodyBuffer</parameter>
            </entry>
            <entry>
              <para>The binary body sent in this response, as a bytes array. The body must be set after content type. Note that content length is set automatically.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>headers</parameter>
            </entry>
            <entry>Response headers in &quot;key-value&quot; form.</entry>
          </row>
          <row>
            <entry>
              <parameter>addHeader(name, value)</parameter>
            </entry>
            <entry>
              <para>Adds a new header with the specified name and value to the response.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>setHeader(name, value)</parameter>
            </entry>
            <entry>
              <para>Defines a new value for the response header.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>addCookie(cookie)</parameter>
            </entry>
            <entry>
              <para>Adds new cookies to the response.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>The <code>cookie</code> object contains the following properties:</para>
    <informaltable>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Property </entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>name</parameter>
            </entry>
            <entry>The cookie name — a mandatory field.</entry>
          </row>
          <row>
            <entry>
              <parameter>value</parameter>
            </entry>
            <entry>
              <para>The current cookie value — a mandatory field.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>comment</parameter>
            </entry>
            <entry>
              <para>Comment, which describes the purpose of the cookie.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>domain</parameter>
            </entry>
            <entry>
              <para>Cookie domain name.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>maxAge</parameter>
            </entry>
            <entry>
              <para>Cookie lifetime in seconds.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>path</parameter>
            </entry>
            <entry>
              <para>Path on the server for which the browser returns this cookie.</para>
            </entry>
          </row>
          <row>
            <entry>
              <parameter>secure</parameter>
            </entry>
            <entry>Flag which notifies the browser that this cookie should only be sent over a secure protocol</entry>
          </row>
          <row>
            <entry>
              <parameter>version</parameter>
            </entry>
            <entry>
              <para>Cookie protocol version.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>In the example below, new cookie will be added to the HTTP response:</para>
    <programlisting language="JavaScript">http.response.addCookie({ 
    name : &apos;platypus&apos;,
    value : &apos;test&apos;,
    maxAge : 60*60
});</programlisting>
    <para>To delete cookie from your browser, set <literal>0</literal> for its <parameter>maxAge</parameter> property.</para>
  </section>
</chapter>
