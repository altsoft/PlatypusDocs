<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Development_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Development_Guide-Intro_Chapter">
  <title>Введение в платформу Platypus</title>
  <para>В данном разделе содержится вводная информация по платформе Platypus.</para>
  <section id="sect-Development_Guide-Intro_Chapter-Test_Section_1">
    <title>Назначение и особенности платформы Platypus </title>
    <para>Platypus Platform — программная платформа для построения  приложений различного уровня сложности. Основная область применения — создание информационных систем уровня предприятия, однако приложения на базе платформы могут   применяться и в других областях, например, государственном управлении.</para>
    <para>Назначение платформы Platypus — ускорение разработки приложений и обеспечение при этом  максимальной автоматизации рутинных операций. Для  типовых задач предоставляются готовые  отработанные  решения. Платформа скрывает от прикладного разработчика технические детали реализации, давая  возможность сконцентрироваться на предметной области. </para>
    <para>В Platypus Platform используются два прикладных языка программирования:</para>
    <itemizedlist>
      <listitem>
        <para>для доступа к данным применяется язык SQL;</para>
      </listitem>
      <listitem>
        <para>для написания программной логики применяется язык JavaScript (совместимый со стандартом ECMA-262-3);</para>
      </listitem>
    </itemizedlist>
    <para>Создание, редактирование элементов приложения, развертывание, отладка и обслуживание приложений Platypus производится при помощи средства разработки <application>Platypus Application Designer</application>. Однако, редактирование отдельных файлов приложения, например, модулей JavaScript возможно в  любом текстовом редакторе.</para>
    <para>При создании приложений используются визуальные средства разработки: </para>
    <itemizedlist>
      <listitem>
        <para>визуальный редактор структуры базы данных (БД) приложения;</para>
      </listitem>
      <listitem>
        <para>визуальный редактор запросов к базе данных;</para>
      </listitem>
      <listitem>
        <para>визуальный редактор форм;</para>
      </listitem>
    </itemizedlist>
    <para>Основные особенности платформы Platypus: </para>
    <itemizedlist>
      <listitem>
        <para>поддержка модульности в JavaScript;</para>
      </listitem>
      <listitem>
        <para>возможность повторного использования SQL запросов;</para>
      </listitem>
      <listitem>
        <para>использование именованных параметров в SQL запросах;</para>
      </listitem>
      <listitem>
        <para>модель данных и автоматический ORM (Object-Relation Mapping) для JavaScript, работающий на основе метаданных базы данных;</para>
      </listitem>
      <listitem>
        <para>отладка JavaScript кода как на локальном компьютере, так и на удаленном сервере;</para>
      </listitem>
      <listitem>
        <para>выполнение SQL запросов в Platypus Application Designer для их отладки;</para>
      </listitem>
      <listitem>
        <para>встроенные механизмы безопасности — аутентификация и авторизация пользователей, разграничение доступа к ресурсам приложения;</para>
      </listitem>
      <listitem>
        <para>библиотека  виджетов, работающих непосредственно с моделью данных, позволяет легко реализовывать достаточно сложные  элементы пользовательского интерфейса;</para>
      </listitem>
      <listitem>
        <para>поддержка миграций структуры и данных БД;</para>
      </listitem>
      <listitem>
        <para>интерфейс пользователя может быть реализован как с помощью приложения Platypus клиент, так и с использованием HTML5 Web-браузера для  одних и тех же форм;</para>
      </listitem>
      <listitem>
        <para>доступ к функциональности платформы из стандартного Web-приложения с помощью Platypus Web API;</para>
      </listitem>
      <listitem>
        <para>работа  сервера приложений и Platypus клиента в виртуальной машине Java (JVM) даёт возможность использовать любые   Java-библиотеки;</para>
      </listitem>
      <listitem>
        <para>интеграция в инфраструктуру J2EE.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="sect-Development_Guide-Intro_Chapter-Test_Section_2">
    <title>Основные компоненты приложения Platypus </title>
    <para>Организационно, приложения на платформе Platypus представляют  собой древовидную структуру, которая включает:</para>
    <itemizedlist>
      <listitem>
        <para>каталоги;</para>
      </listitem>
      <listitem>
        <para>элементы приложения;</para>
      </listitem>
      <listitem>
        <para>другие файлы;</para>
      </listitem>
    </itemizedlist>
    <para> Типы элементов приложения:
  </para>
    <itemizedlist>
      <listitem>
        <para>Диаграмма структуры базы данных — визуальное представление  части структуры данных, например, относящейся к определенной части предметной области;</para>
      </listitem>
      <listitem>
        <para>Подключение к внешней базе данных — данный элемент позволяет использовать в приложении несколько соединений с разными базами данных одновременно;</para>
      </listitem>
      <listitem>
        <para>Модуль - программный модуль, структурная единица программного кода JavaScript, и  его модель данных;</para>
      </listitem>
      <listitem>
        <para>Форма — элемент пользовательского интерфейса, отображаемый в клиентских приложениях, программный код JavaScript и её модель данных;</para>
      </listitem>
      <listitem>
        <para>Отчет — шаблон генерируемого офисного документа,  программный код JavaScript и его модель данных;</para>
      </listitem>
    </itemizedlist>
    <note>
      <para>В процессе разработки и  отладки, приложение представляет собой файловую структуру на диске, а  для промышленной эксплуатации   приложение может быть развернуто  в <acronym>БД</acronym>.</para>
    </note>
    <para>Каждому элементу приложения в Platypus должно соответствовать уникальное в рамках данного приложения имя-идентификатор. Имя элемента приложения может совпадать, а может и  не совпадать с именем файла в котором данный элемент приложения хранится на диске. Имя-идентификатор используется в других элементах приложения (запросах, модулях, формах, отчетах) для однозначной идентификации  данного элемента, а также при развертывании приложения в БД. При использовании имя элемента приложения является регистро-чувствительным, т.е. <classname>mymodule</classname> и <classname>myModule</classname> - это разные имена.</para>
    <para>Имя-идентификатор элемента приложения должно быть назначено в соответствии со следующими правилами:</para>
    <itemizedlist>
      <listitem>
        <para>может содержать  буквы, цифры и знак подчеркивания;</para>
      </listitem>
      <listitem>
        <para>должно начинаться с буквы или знака подчеркивания.</para>
      </listitem>
    </itemizedlist>
    <para>Имя модуля должно быть уникально в пределах приложения.</para>
    <para>Пример допустимых имен элемента приложения: </para>
    <itemizedlist>
      <listitem>
        <para><classname>moduleName2</classname></para>
      </listitem>
      <listitem>
        <para><classname>document_processor</classname></para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Архитектура приложения Platypus</title>
    <para>Архитектура приложения платформы Platypus в  общем случае состоит из  3-х слоев. При этом они могут быть представлены в  2-х звенной  и в 3-х звенной конфигурациях.</para>
    <figure>
      <title>Архитектура платформы Platypus</title>
      <mediaobject>
        <imageobject>
          <imagedata width="100%" contentdepth="100%" align="center" scalefit="1" fileref="images/tiers.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>В случае 2-х звенной конфигурации слой представления и слой логики работают в клиентском приложении, а в случае 3-х звенной конфигурации слой представления работает в клиентском приложении, а слой логики на сервере приложений Platypus.</para>
    <para>На представленном ниже рисунке показана упрощенная диаграмма взаимодействия компонентов и обмена данными в приложении Platypus. </para>
    <figure>
      <title>Взаимодействие компонентов и обмен данными в приложении Platypus</title>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="images/dataflow.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Программные элементы приложения и совместимые с моделью элементы интерфейса пользователя   используют модель данных для доступа к данным. </para>
    <para>Компоненты  Data Flow могут работать как на клиенте так и на сервере. В  случае 2-х звенной конфигурации компонеты Data Flow исполняются на клиенте. В случае 3-х звенной конфигурации  компоненты Data Flow работают как  на  клиенте, так на и сервере, в т.ч. на разных компьютерах, обеспечивая при этом  прозрачный обмен данными.</para>
    <para>Особенностью платформы Platypus является её реализация <acronym>ORM</acronym>: при генерации наборов объектов, соответствующих реляционным сущностям, используются метаданные из базы данных и тексты SQL запросов. Преимуществом данного подхода является отсутствие дублирования  метаданных и, как следствие, необходимости их синхронизации для объектной модели и БД при внесении изменений.  </para>
    <para>Использование модели данных позволяет упростить многие операции по работе с данными, так как модель обеспечивает автоматическую синхронизацию данных сущностей, автоматическое сохранение измененных данных,  упрощенную поддержку транзакций, централизованное управление ресурсами и т.д.</para>
    <para>Разработка приложения Platypus состоит из следующих типовых действий:</para>
    <itemizedlist>
      <listitem>
        <para>определение структуры данных для моделирования  предметной области;</para>
      </listitem>
      <listitem>
        <para>реализация этой структуры в виде реляционных сущностей в БД с помощью дизайнера диаграмм структуры базы данных;</para>
      </listitem>
      <listitem>
        <para>написание запросов на выборку данных, при необходимости реализация запросов на обновление и добавление данных на языке SQL (задачи обновления и добавления данных в большинстве случаев  могут быть решены моделью данных автоматически), определение параметров запросов;</para>
      </listitem>
      <listitem>
        <para>реализация логики приложения в виде модулей при помощи дизайнера модулей,</para>
        <para>для каждого модуля:</para>
        <itemizedlist>
          <listitem>
            <para>определение модели данных  модуля и  её параметров;</para>
          </listitem>
          <listitem>
            <para>написание программного кода JavaScript, реализующего  бизнес-логику;</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>реализация пользовательского интерфейса приложения в виде форм при помощи дизайнера форм,</para>
        <para>для каждой формы:</para>
        <itemizedlist>
          <listitem>
            <para>определение модели данных формы и  её параметров;</para>
          </listitem>
          <listitem>
            <para>создание макета формы с помощью визуального редактора;</para>
          </listitem>
          <listitem>
            <para>написание программного кода JavaScript отвечающего за интерфейс пользователя;</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>реализация отчетов при помощи дизайнера отчетов,</para>
        <para>для каждого отчета:</para>
        <itemizedlist>
          <listitem>
            <para>определение модели данных отчета и определение её параметров;</para>
          </listitem>
          <listitem>
            <para>создание шаблона отчета с помощью визуального редактора;</para>
          </listitem>
          <listitem>
            <para>написание программного кода JavaScript для не типовой обработки формирования отчета.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
