<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Administration_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Administration_Guide-Security_Chapter">
  <title>Application configuration</title>
  <section id="sect-Administration_Guide-Security_Chapter-Test_Section_2">
    <title>Security</title>
    <para>Platypus platform is equipped with  security mechanisms and provides restricted access to system resources based on roles. Roles are introduced on  application level.</para>
    <para>As for authentication, Platypus may use various security domains. The security domain may be internal or external and contain information about users and their group membership. Platypus supports the following security domain options:</para>
    <itemizedlist>
      <listitem>
        <para>An database  users registry, which is located in two database tables. </para>
      </listitem>
      <listitem>
        <para>External storages of authentication data, for example, the LDAP server (Active Directory, OpenLDAP, etc.).</para>
      </listitem>
    </itemizedlist>
    <para>The security domain is used to ​​define a set of &quot;groups&quot; or &quot;global roles&quot; for the user, which can be associated with roles at the application level.</para>
    <para>Using the built-in repository provides simple tools for storing information about users and groups.</para>
    <para>This mode is the only one possible when using the 2-tier scheme and when using 3-tier scheme where the Platypus application server works out of the J2EE server, and also can be configured when Platypus works as a part of J2EE server. To use this mode, you should configure the appropriate security domain — Security Realm — in the servlet container or on the J2EE server.</para>
    <note>
      <para>See Appendix B &quot;Configuring LDAP security domain&quot; for reference information on configuring security domain for the <application>Glassfish</application> server.</para>
      <para>See documentation for the <application>
          <application>Tomcat</application>
        </application>  servlet container for reference information on configuring security domain for  <application>Apache Tomcat</application>.</para>
    </note>
    <para>In this mode, user information is stored in the <literal>MTD_USERS</literal>  table of the application database. Each entry in this table corresponds to one user. Information about groups, which the user belongs to, are stored in the <literal>MTD_GROUPS</literal> table. Each user may be mapped to 0 or more groups.</para>
    <para>The  <literal>MTD_USERS</literal> table contains the following mandatory fields:</para>
    <informaltable>
      <textobject>
        <para>Параметры запуска сервера</para>
      </textobject>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Field</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>USR_NAME</parameter>
            </entry>
            <entry>Username </entry>
          </row>
          <row>
            <entry>
              <parameter>USR_PASSWD</parameter>
            </entry>
            <entry>Hash sum of the user password using the MD5 algorithm</entry>
          </row>
          <row>
            <entry>
              <parameter>USR_FORM</parameter>
            </entry>
            <entry>Default form identifier, for example <literal>comAppFormsWelcome</literal></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>In addition, the <literal>MTD_USERS</literal>  table can include optional fields containing additional information about the user.</para>
    <para>The  <literal>MTD_GROUPS</literal>  table contains the following mandatory fields:</para>
    <informaltable>
      <textobject>
        <para>Параметры запуска сервера</para>
      </textobject>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Field</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <parameter>USR_NAME</parameter>
            </entry>
            <entry>Username </entry>
          </row>
          <row>
            <entry>
              <parameter>GROUP_NAME</parameter>
            </entry>
            <entry>Group name</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>For developing and testing applications, use  <literal>admin</literal>  as the technical login and  <literal>masterkey</literal> as the password. The  <literal>admin</literal> user is a member of the <literal>admin</literal> group.</para>
    <important>
      <para>Change the technical password before starting the commercial usage of the application!</para>
    </important>
  </section>
  <section id="sect-Administration_Guide-Deployment_Chapter-Test_Section_2">
    <title>Application database deployment and import</title>
    <para>Deployment is the process of spreading the finished application for installing or upgrading on the production server. On the production server, the Platypus application resides entirely in the database or on the hard drive in the form of a directory. </para>
    <para>Migration process ensures maintaining and restoring configuration and original data in the database.  </para>
    <para>If the Platypus application is delivered as a zip file, unpack its contents to a location according to your preference on your hard drive.</para>
    <para>After unpacking, the directory will have the following structure:</para>
    <itemizedlist>
      <listitem>
        <para><filename>appDirectory/</filename></para>
        <itemizedlist>
          <listitem>
            <para><filename>src/</filename></para>
          </listitem>
          <listitem>
            <para><filename>platypus.xml</filename></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
    <para>The Platypus application directory corresponds to the application project, which is ready for deployment and execution, as well as for modification in  <application>Platypus Application Designer</application>.</para>
    <para>The application directory includes the  <filename>platypus.xml</filename> configuration file, the <filename>src</filename>  directory, containing application elements, <filename>db</filename> directory, containing database migrations, and  <filename>project.properties</filename> and <filename>private.properties</filename> designer configuration files.</para>
    <para>The database, in which the application is deployed, includes system tables and any number of worksheets. When deploying, system tables are created automatically.</para>
    <para>System tables includes the following:</para>
    <itemizedlist>
      <listitem>
        <para><literal>MTD_ENTITIES</literal> — this table stores the executable application in the form of a tree. </para>
      </listitem>
      <listitem>
        <para><literal>MTD_USERS</literal> и <literal>MTD_GROUPS</literal> — tables of users and their groups when working with built-in user space; for additional information, see the &quot;Security&quot; section.</para>
      </listitem>
      <listitem>
        <para><literal>MTD_VERSION</literal>  — this table stores information about the current version of the application data repository.</para>
      </listitem>
    </itemizedlist>
    <para>After deployment in the database each application element is represented as a single entry in the <literal>MTD_ENTITIES</literal> table.</para>
    <para>The command for starting the deployment and database migration utility is as follows:</para>
    <programlisting>java -jar PlatypusDeploy.jar <replaceable>OPTIONS</replaceable></programlisting>
    <para>where <replaceable>OPTIONS</replaceable>  is a deployment or migration command and a set of its parameters.</para>
    <para>For the description of commands related to the import deployment operation and migrations, see sections dedicated to deployment and database migrations.</para>
    <table>
      <title> Deployment and migration commands parameters</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
          <row>
            <entry>
              <parameter>-ap APP_PATH</parameter>
            </entry>
            <entry>Path to the folder containing the finished Platypus application. If this parameter is not specified, the current directory will be used.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbuser DB_USER</parameter>
            </entry>
            <entry>Username for authorization in the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbpassword DB_PASSWORD</parameter>
            </entry>
            <entry>User password for authorization in the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbschema DB_SCHEMA</parameter>
            </entry>
            <entry>Database scheme.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <note>
      <para>You can also perform actions for deploying and updating applications using the <application>Platypus Application Designer</application>.</para>
    </note>
    <important>
      <para>Before updating the application, make a backup copy of the operating database.</para>
    </important>
    <para>During the development, the application resides in a drive directory and it can be run for debugging and testing directly from the drive. For commercial usage, it is recommended to deploy the application to the database.</para>
    <table>
      <title>Application deployment and import commands</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
          <row>
            <entry>
              <parameter>-deploy</parameter>
            </entry>
            <entry>Deploys application from the drive to the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-undeploy</parameter>
            </entry>
            <entry>Deletes application from the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-import</parameter>
            </entry>
            <entry>Imports application from the database to the drive.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>If settings of the connection to the database or the Platypus user name and password are not specified in options, information about the connection to the database will be read from the <filename>platypus.xml</filename>  settings file of the application folder.</para>
    <para>Example of the command for importing an application from the database:</para>
    <programlisting>java -jar PlatypusDeploy.jar -import -ap ~/apps/testApp -url jdbc:oracle:thin:@serverHost:1521:adb -dbuser user1 -dbpassword secret -dbschema testschema</programlisting>
    <para><application>Platypus Application Server</application> and  <application>Platypus Client</application> do not require restarting after updating the operating application.</para>
  </section>
  <section>
    <title>Database migrations</title>
    <para>Configuration of the Platypus application database is stored in the form of successive migrations, which are applied consistently to ensure the correct operation of schema and data updates in the database. Each change of the structure or business data is represented as a migration file with a name corresponding to the change version, starting from 1. The file name for each new migration is created by adding 1 to the maximum version number for the application. Two types of migration files are available:</para>
    <itemizedlist>
      <listitem>
        <para>Database metadata snapshot with the <filename>.xdm</filename> extension</para>
      </listitem>
      <listitem>
        <para>A package of SQL commands for adding and/or changing service data with the  <filename>.batch</filename> </para>
      </listitem>
    </itemizedlist>
    <table>
      <title>Commands for creating and applying database migrations</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
          <row>
            <entry>
              <parameter>-apply</parameter>
            </entry>
            <entry>Applies a set of migrations to the database. The migrations with number greater than the current database version are applied.</entry>
          </row>
          <row>
            <entry>
              <parameter>-undeploy</parameter>
            </entry>
            <entry>Deletes application from the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-snapshot</parameter>
            </entry>
            <entry>Creates a new migration — a database metadata snapshot; the database version corresponds to this migration.</entry>
          </row>
          <row>
            <entry>
              <parameter>-batch</parameter>
            </entry>
            <entry>Creates a new empty batch migration; the version of the database corresponds to this migration.</entry>
          </row>
          <row>
            <entry>
              <parameter>-clean</parameter>
            </entry>
            <entry>Cleans the migration directory by removing migrations which are not applied.</entry>
          </row>
          <row>
            <entry>
              <parameter>-getver</parameter>
            </entry>
            <entry>Returns the current version of the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-setver</parameter>
            </entry>
            <entry>Sets the current database version in <replaceable>VERSION</replaceable> — a nonnegative integer.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>If settings of the connection to the database or the Platypus user name and password are not specified in options, information about the connection to the database will be read from the <filename>platypus.xml</filename>  settings file of the application folder.</para>
    <para>When applying migrations to the database, only the latest snapshot of the database structure is used, as well as all snapshots which were created immediately before the packages of SQL commands; other migration files are ignored and can be removed using the <parameter>-clean</parameter> command.</para>
    <para>Example of applying migrations to the database:</para>
    <programlisting>java -jar PlatypusDeploy.jar -apply -ap ~/apps/testApp</programlisting>
  </section>
</chapter>
