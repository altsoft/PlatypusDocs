<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Administration_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Administration_Guide-Server_Chapter">
  <title>Platypus Application Server</title>
  <para>The main purpose of use of  the Platypus Application Server is to provide support for  various binary communication protocols. </para>
  <section id="sect-Administration_Guide-Server_Chapter-Test_Section_2">
    <title>Running server</title>
    <para>To start the server application, you  run the startup script for the server, located in the
    <filename>/run</filename> folder:    </para>
    <itemizedlist>
      <listitem>
        <para><filename>server.bat</filename> is the script file to start the  server in Windows. </para>
      </listitem>
      <listitem>
        <para><filename>server.sh</filename> is the script file to start the server in Linux.</para>
      </listitem>
    </itemizedlist>
    <para>For running the server in production environment, it is recommended to configure it as an operating system service.</para>
  </section>
  <section>
    <title>Command line options</title>
    <para>The command for running the server is as follows:</para>
    <programlisting>java <replaceable>JVM_OPTIONS</replaceable> -cp Server.jar;<replaceable>EXT_CLASSPATH</replaceable> com.eas.server.ServerMain <replaceable>OPTIONS</replaceable></programlisting>
    <para>where <replaceable>JVM_OPTIONS</replaceable> is Java Virtual Machine options, <replaceable>EXT_CLASSPATH</replaceable> are paths to be added to the Java class loader search path, <replaceable>OPTIONS</replaceable> are server application running parameters.</para>
    <table>
      <title>Command line options</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Parameter</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><parameter>-iface</parameter><replaceable> ADRESS:PORT</replaceable>,<replaceable>ADRESS:PORT</replaceable></entry>
            <entry>Network interfaces and listening ports for the server.</entry>
          </row>
          <row>
            <entry>
              <parameter>-url URL</parameter>
            </entry>
            <entry>URL to the applicaion. Can be one of the follow: <literal>file://<replaceable>path</replaceable></literal> to specify to a directory or <literal>jndi://<replaceable>datasource</replaceable></literal> to specify to a datasource. </entry>
          </row>
          <row>
            <entry>
              <parameter>-appelement APP_ELEMENT</parameter>
            </entry>
            <entry>Module or form element&apos;s name to run.</entry>
          </row>
          <row>
            <entry>
              <parameter>-protocols</parameter>
              <replaceable> PORT:PROTOCOL,PORT:PROTOCOL</replaceable>
            </entry>
            <entry>Network protocols for listening ports.</entry>
          </row>
          <row>
            <entry>
              <parameter>-loglevel LOG_LEVEL</parameter>
            </entry>
            <entry>Logging level. This parameter specifies the minimum level, which will be shown in the log. For the description of logging levels, see Appendix A.</entry>
          </row>
          <row>
            <entry>
              <parameter>-log LOG_FILE_PATH</parameter>
            </entry>
            <entry>Name and path of the log file.</entry>
          </row>
          <row>
            <entry>
              <parameter>-tasks </parameter>
              <replaceable>MODULES_NAME</replaceable>
            </entry>
            <entry>The list of server modules (separated by comma without spaces) for processing incoming data and background tasks. The <methodname>received(data)</methodname>function should be defined for the incoming data processing module. The incoming data processing modules can have the <property>@stateless</property>annotation, or be without it. Background tasks modules should not have the <property>@stateless annotation. When starting server, modules with this annotation will be skipped.</property></entry>
          </row>
          <row>
            <entry>
              <parameter>-default-datasource DEFAULT_DS</parameter>
            </entry>
            <entry>Name of the application&apos;s default datasource.</entry>
          </row>
          <row>
            <entry>
              <parameter>-datasource DS</parameter>
            </entry>
            <entry>Datasource name.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dburl DB_URL</parameter>
            </entry>
            <entry>JDBC URL database connection.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbuser DB_USER</parameter>
            </entry>
            <entry>Username for authorization in the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbpassword DB_PASSWORD</parameter>
            </entry>
            <entry>Password for authorization in the database.</entry>
          </row>
          <row>
            <entry>
              <parameter>-dbschema DB_SCHEMA</parameter>
            </entry>
            <entry>Database scheme (optional).</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>Define zero or more datasources for a single application. A datasource is represented in a group of the following parameters: <parameter>-datasource</parameter>, <parameter>-dburl</parameter>, <parameter>-dbuser,</parameter> <parameter>-dbpassword</parameter> and optional <parameter>-dbschema</parameter> provided jointly. One of the datasource can be specified as a default using the <parameter>-default-datasource</parameter> parameter.</para>
    <para>The example of the  application server running command:</para>
    <programlisting>java -cp Server.jar com.eas.server.ServerMain -iface 0.0.0.0:8500 -protocols 8500:platypus -url jndi://ds -default-datasource ds -datasource ds dburl jdbc:h2:tcp://localhost:9092/testServer -dbuser sa -dbpassword sa</programlisting>
  </section>
</chapter>
