[[работа-с-проектом-приложения-в-platypus-application-designer]]
Работа с проектом приложения в Platypus Application Designer
------------------------------------------------------------

В процессе разработки и далее в течение жизненного цикла приложения, оно
представлено проектом Platypus. Проект Platypus представляет собой
каталог на жестком диске, содержащий файлы настроек и элементов
приложения.

[[создание-нового-проекта]]
Создание нового проекта
-----------------------

В этом разделе содержится информация по созданию и основным действиям
при работе с проектом Platypus.

Для создания нового проекта Platypus выполните следующие действия:

* запустите дизайнер (если он еще не запущен). Для этого воспользуйтесь
ярлыком Platypus Application Designer на рабочем столе или пунктом меню
установленных приложений;
* выберите пункт меню File New Project или нажмите на кнопку New Project
на панели инструментов;
* выберите тип проекта Platypus Application Project и нажмите кнопку
Next;
* введите название и место расположения проекта:
** введите имя каталога проекта в поле Project Folder Name;
** выберите родительский каталог, в котором будет создан проект
приложения Platypus в поле Project Location;
** введите наименование проекта в поле Project Title;
** нажмите кнопку Next для перехода к следующему шагу;
* введите параметры соединения с БД:
** введите URL соединения с БД в формате JDBC в поле JDBC Url, например,
JDBC URL для базы данных MySQL вида
`jdbc:mysql://localhost:3306/db_name`; используйте кнопку Build JDBC Url
для вызова мастера формирования URL; в окне мастера выберите тип базы
данных, имя хоста, порт и имя базы данных — JDBC URL при этом будет
сформирован автоматически;
** введите наименование схемы в БД в поле Database Schema;
** введите имя пользователя в поле Database User Name;
** введите пароль в поле Database User Password;
** для проверки соединения с БД нажмите кнопку Test connection;
* нажмите кнопку Finish для завершения создания проекта Platypus.

Новый проект будет добавлен на панель Projects.

[[открытие-проекта]]
Открытие проекта
----------------

Для того, чтобы открыть существующий проект Platypus выполните следующие
действия:

* запустите дизайнер (если он еще не запущен) — для этого воспользуйтесь
ярлыком Platypus Application Designer на рабочем столе или пунктом меню
установленных приложений;
* выберите пункт меню File Open Project или нажмите на кнопку Open
Project на панели инструментов;
* выберите родительский каталог проекта при помощи диалога выбора,
выберите папку проекта, нажмите кнопкуOpen Project.

Открытый проект будет добавлен на панель Projects.

[[настройка-свойств-проекта]]
Настройка свойств проекта
-------------------------

Для того, чтобы изменить свойства проекта выберите пункт Properties
контекстного меню корневого узла проекта.

Настройте параметры главного соеденения с базой данных:

* выберите категорию Applictation Database;
* задайте JDBC URL, при необходимости воспользовавшись для этого
мастером Build JDBC Url;
* задайте схему БД;
* задайте имя пользователя и пароль.

Настройте параметры запуска приложения:

* выберите категорию Run;
* задайте стартовый элемент приложения по умолчанию; при необходимости
воспользуйтесь диалогом выбора элемента приложения;
* задайте тип запускаемого клиентского приложения: Platypus Client или
HTML5 браузер;
* задайте тип запускаемого сервера: Нет, Platypus Application Server,
J2EE Server;
* установите флажок Database application для того, чтобы при запуске
использовалось приложение, развернутое в базе данных;
* установите флажок Don't start application server для того, чтобы
запускать только клиент;
* на вкладке Client в поле Url задайте URL сервера приложений, который
будет использоваться приложением Platypus Client при запуске, если
установлен флаг Don't start application server;
* на вкладке Client в полях Login и Password задайте имя пользователя и
пароль для приложения Platypus Client;
* на вкладке Client в поле Options задайте дополнительные параметры
запуска приложения Platypus Client, например, LaF (Look and Feel);
* на вкладке Platypus Application Server в поле Port задайте порт, на
котором будет работать сервер приложения разработки;
* на вкладке Platypus Application Server в поле Options задайте
дополнительные параметры запуска сервера приложений Platypus;
* на вкладке J2EE Server в поле Server выберите из списка установленых
J2EE серверов экземпляр сервера который будет использован для запуска
приложения;
* на вкладке J2EE Server в поле Context введите имя web-приложения в
J2EE сервере;
* на вкладке J2EE Server установите флажок Enable security для
активизации безопасности, при этом для web-приложения будет использован
механизм аутентификации при помощи форм;

Настройте параметры отладки:

* выберите категорию Applictation Database;
* задайте порт отладки Platypus Client;
* задайте порт отладки сервера приложений.

[[структура-проекта-и-действия-с-элементами-приложения]]
Структура проекта и действия с элементами приложения
----------------------------------------------------

Проект Platypus имеет следующую структуру:

* элементы приложения Application Elements — корневой каталог,
содержащий дерево элементов приложения;
* миграции БД Database Migrations — каталог, содержащий файлы миграций
БД.

Над элементами и каталогами приложения можно выполнить следующие
операции:

* создать новый элемент — команда `New`;
* переименовать — для этого кликните на названии выделенного элемента
приложения или каталога и нажмите клавишу F2;
* вставить в указанное место проекта элемента приложения скопированного
в буфер — команда `Paste`;
* копировать и перенести каталог или элементы приложения в указанное
место проекта путем перетаскивания, для копирования удерживайте кнопку
Ctrl во время перетаскивания - команда `Drag-and-Drop`;
* удаление элемента приложения — команда `Delete`;
* поиск элемента в проекте — команда `Find`.

Выполните данные операции используя контекстное меню элемента, пункты
меню Edit в главном меню или "горячие" клавиши. Над элементами
приложения могут выполняться операции, применимые к элементам приложения
данного типа. Подробно специфические операции рассмотрены в разделах,
посвященных конкретным типам элементов приложения.

Для того, чтобы создать новый каталог:

* выберите пункт меню New контекстного меню родительского каталога или
выделите родительский каталог и выберите пункт New Filе главного меню
или нажмите кнопку New File на панели инструментов или воспользуйтесь
"горячей" клавишей;
* выберите тип Folder из контекстного меню или на на первом шаге мастера
Choose file type Platypus application elements Folder и нажмите Next;
* введите название каталога в поле Name и нажмите Finish для создания
нового каталога или Cancel для отмены.

Для того, чтобы перейти к элементу приложения зная его
имя-идентификатор:

* выберите пункт меню File Go to application element или активируйте
сочетание клавиш Ctl Shift G;
* в диалоге введите имя-идентификатор элемента приложения в поле Provide
appication element id диалога;
* нажмите OK для перехода к элементу приложения или Cancel для отмены;

Для того, чтобы открыть элемент приложения выберите пункт Open в
контекстном меню элемента приложения или дважды кликните на этом
элементе. Редактор элемента приложения откроется в виде окна в зоне
редакторов Platypus Application Designer.

Для того, чтобы узнать имя-идентификатор элемента приложения:

* выберите элемент приложения в дереве элементов приложения проектов;
* выберите пункт менюFile Application element info или активируйте
сочетание клавишCtl Shift I.

Для того, чтобы запустить приложение:

* выберите элемент приложения в дереве элементов приложения проектов;
* нажмите кнопку Run project на главной панели инструментов или выберите
пункт контекстного меню элемента Run элемента приложения.

В случае если элемент для запуска приложения не выбран явно в качестве
стартового элемента будет задан стартовый элемент приложения по
умолчанию из настроек проекта.

Для того, чтобы произвести отладку приложения:

* установите точки останова в программе JavaScript;
* выберите элемент приложения в дереве элементов приложения проектов;
* нажмите кнопку Debug project на главной панели инструментов или
выберите пункт контекстного меню элемента Debug элемента приложения;
* после остановки отладчика на точке останова смотрите содержимое
переменных и стека вызовов; для продолжения работы программы нажмите
кнопку Continue главной панели инструментов; используйте кнопки Step
over или клавишу F8, Step into или клавишу F7, Step out или сочетание
клавиш Ctrl F7 для пошагового исполнения программы.

При запуске приложения в J2EE сервере Platypus Application Designer
использует подкаталог `web`, которая создается в каталоге проекта
автоматически. При инициализации этого подкаталога создатется ее
структура и копируется библиотеки. После инициализации этого каталога
изменяются несколько файлов отвечающих за конфигурирование (файл
`WEB-INF/web.xml`, специфический файл конфигруирования для конкретного
сервера и JavaScript-файл, отвечающий за запуск элемента приложения на
HTML странице), при этом библиотеки повторно не копируются.

Если необходимо обновить библиотеки в каталоге `web` — выберите пункт
Clean контекстного меню проекта. Библиотеки будут удалены, а при
следующем запуске эти библиотеки будут заново скопированы из каталога
платформы Platypus.

[[управление-соединением-с-бд]]
Управление соединением с БД
---------------------------

Для полноценной работы с Platypus Appication Designer необходимо в
процессе разработки приложения установить соединение с базой данных.
Параметры соединения задаются при создании нового проекта и могут быть
изменены на форме свойств проекта, которую можно открыть выбрав в
контекстном меню проекта пункт Properties. При открытии проекта Platypus
Appication Designer предпринимает попытку соединиться с БД, и если это
не удается, переходит в режим ограниченной функциональности - при этом
работа с дизайнером модели данных становится недоступной, также
отключаются некоторые другие возможности дизайнера.

В процессе разработки, каждому разработчику в команде, работающей над
одним проектом рекомендуется создать и использовать собственный
экземпляр БД для отладки и тестирования. Также создается общая
образцовая БД команды куда применяются все изменения прошедшие отладку
на индивидуальных базах разработчиков.

Локальную базу данных разработчика удобно запускать на "легком" сервере
баз данных H2, поставляемой в комплекте с Platypus Platform.

Для того, чтобы запустить сервер БД H2 в Platypus Application Designer:

* откройте панель служб Services;
* выберите узел Databases H2 и активируйте пункт меню Start.

_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
*Note*

В приложениях Platypus Platform рекомендуется по-возможности не
использовать особенности конкретных баз данных, используя стандартный
SQL для того, чтобы приложение могло быть легко перенесено на другие
сервера БД, поддерживаемые платформой.
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

После того, как сервер БД будет запущен и станет доступен по сети или
локально, соединитесь с ним выбрав из контекстного меню проекта пункт
Connect to project database или нажав кнопку Establish connection на
форме Application Database свойств проекта или нажав ссылку Connect to
project database на форме-заглушке редактора модели данных.

Для того, чтобы разорвать соединение выберите из контекстного меню
проекта пункт Disconnect from project database или или нажмите кнопку
Drop connection на форме Application Database свойств проекта.

[[развертывание-элементов-приложения-в-бд]]
Развертывание элементов приложения в БД
---------------------------------------

Для тестирования или промышленной эксплуатации элементы приложения могут
быть развернуты в базу данных. После развертывания приложение может
исполняться непосредственно из базы данных.

Для того, чтобы развернуть приложение в БД: выберите пункт Deploy из
контекстного меню узла проекта. При развертывании элементы приложения из
папки Application Elements копируются в таблицу `MTD_ENTITIES`БД.
Элементы приложения ранее находившиеся в этой таблице удаляются. При
копировании сохраняется древовидная структура каталогов приложения.

Импорт приложения из БД - процесс обратный развертыванию. Для того,
чтобы импортировать приложение из БД: выберите пункт Import из
контекстного меню проекта. При импорте элементы приложения из таблицы
`MTD_ENTITIES` копируются в папку Application Elements.

__________________________________________________________________________________________________________________________
*Important*

При импорте приложения перед началом копирования элементов приложения из
базы данных папка Application Elements очищается.
__________________________________________________________________________________________________________________________

[[миграции-бд]]
Миграции БД
-----------

Platypus Platform имеет встроенный механизм контроля над изменением
структуры и данных в БД, являющихся частью приложения.

______________________________________________________________
*Important*

Перед началом применения миграций сделайте резервную копию БД.
______________________________________________________________

Данные приложения — это информация, которая необходима для начала работы
приложения — базовые справочники, начальные данные и т.п.

Структура БД и данные приложения представлены в виде файлов миграций.
Каждая миграция имеет свой номер, представленный положительным целым
числом, которое используется в качестве имени файла. В процессе
разработки и далее в ходе жизненного цикла приложения при изменении
структуры БД или изменении данных создается миграция, которая затем
может быть применена на других экземплярах БД. В базе данных приложения
поддерживается информация о текущей версии БД (таблица `MTD_VERSION)`,
соответсвующая номеру актуальной миграции.

Миграции с номером большим чем текущая версия БД последовательно
применяются к БД в процессе синхронизации. После успешного применения
миграции номер версии БД устанавливается равным номеру этой миграции.

Типы миграций:

* мгновенный снимок структуры БД — файл с расширением `.xdm`, содержащий
представление метаданных БД в формате XML;
* пакет команд SQL — файл с расширением `.batch` , содержащий SQL
команды, разделенные тэгом `#GO`.

_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
*Note*

В пакетном SQL-файле рекомендуется использовать DML (`INSERT`, `UPDATE`
и `DELETE`) команды, хотя технически допустимо помещать туда и DDL
команды. Однако, использование команд изменяющих структуру БД в пакетном
SQL-файле не рекомендовано, поскольку это может снизить переносимость
приложения.
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

Команды создания и применения миграций доступны при наличии соединения с
БД.

Для создания нового моментального снимка структуры БД выберите пункт
менюAdd Metadata Migration контекстного меню на узле Database
Migrations. При этом будет создан мгновенный снимок метаданных базы и
текущая версия БД будет увеличена на единицу. Новому файлу будет
присвоено имя соответствующее новой версии БД.

Для создания нового файла команд SQL выберите пункт меню Add SQL
Migration контекстного меню на узле Database Migrations проекта. При
этом текущая версия БД будет увеличена на единицу. Новому файлу будет
присвоено имя соответствующее новой текущей версии БД.

В процессе применения миграций имеют значения и применяются лишь те
мгновенные снимки метаданных, которые по номеру версии находятся
непосредственно перед пакетным SQL-файлом и та миграция, которая имеет
максимальный номер.

Для удаления неиспользуемых миграций (очистки каталога миграций)
выберите пункт меню Cleanup контекстного меню каталога миграций Database
Migrations проекта. Нажмите кнопку Yes для подтверждения или No для
отмены команды в диалоге подтверждения.

Для применения миграций из каталога миграций проекта выберите пункт меню
Apply Migrations контекстного меню Database Migrations проекта.

В процессе разработки может возникнуть потребность узнать текущий номер
версии БД или изменить его. Для того, чтобы узнать текущий номер версии
БД проекта к которой подключен Platypus Application Designer выберите
пункт меню Db migration version из контекстного меню Database Migrations
проекта. Текущая версия БД будет показана в диалоге Current Db Migration
version в поле Migration version. Для изменения текущей версии задайте
новый номер текущей версии БД в текстовом поле Migration version и
нажмите кнопку OK. Если вы не хотите менять текущую версию БД, нажмите
кнопку Cancel или закройте диалог.

[[работа-с-системами-контроля-версий]]
Работа с системами контроля версий
----------------------------------

В процессе разработки и далее в течение жизненного цикла приложения
рекомендуется помещать исходные файлы проекта под управление системы
контроля версий.

Platypus Application Designer имеет встроенную поддержку следующих
систем контроля версий:

* Subversion
* Git
* Mercurial

Для доступа к возможностям данных систем контроля версий используйте
пункт Team глобального меню и/или подменю Versioning контекстного меню
проекта.

____________________________________________________________________________________________________________________________
*Note*

Обратитесь к документации на соответствующую систему контроля версий для
получения подробной информации по её использованию.
____________________________________________________________________________________________________________________________
