[[application-project]]
Application project
-------------------

In the course of development and further during the application life
cycle, the application is represented by the application project.

[[new-project-creation]]
New project creation
--------------------

To create a project, perform the following actions:

* Launch the application designer (if not launched yet). To do that, use
the Platypus Application Designer shortcut on the desktop or the
corresponding item in the installed applications menu.
* Select File New Project or click the New Project button on the
toolbar.
* Select the project type as the Platypus Application Project and click
Next.
* Specify the project name and location:
** Specify the project directory name in the Project Folder Name field.
** Select the parent directory, in which the Platypus application
project will be created, in the Project Location field.
** Specify the project title in the Project Title field.
** Click Next to proceed to the next step.
* Click Finish to finish the Platypus project creation.

New project will be added to the Projects panel.

[[opening-an-existing-project]]
Opening an existing project
---------------------------

To open an existing project, perform the following actions:

* Select File Open Project or click the Open Project button on the
toolbar.
* Select the project parent directory using the selection dialog, select
the project folder, and click the Open Project button.

Opened project will be added to the Projects panel.

[[project-properties]]
Project properties
------------------

To change the project properties, select the Properties item in the
project root node context menu.

Set the application launching parameters:

* Select the Run category.
* Set the default application starting element; if necessary, use the
application element selection dialog.
* Set the type of the client application to be launched: Platypus Client
or HTML5 browser.
* Set the type of the server to be launched: None, Platypus Application
Server or J2EE Server.
* Check the Don't start application server option to launch the client
only.
* On the Client tab, in the Url field specify the URL of the application
server which will be used by the Platypus Client application when
launching, if the Don't start application server option is enabled.
* On the Client tab, in the Login and Password fields specify login and
password for the Platypus Client application.
* On the Client tab, in the Options field specify additional parameters
of the Platypus Client application launching, for example, LaF (Look and
Feel).
* On the Platypus Application Server tab, in the Port field specify a
port for the development application server.
* On the Platypus Application Server tab, in the Options field set
additional parameters of the Platypus application server launching.
* On the J2EE Server tab, in the Server field select the server instance
to be used for the application launching from the list of the installed
J2EE servers.
* On the J2EE Server tab, in the Context field specify the name of the
web-application in the J2EE server.
* On the J2EE Server tab, check the Enable security option to enable the
security; in this case FORM authentication will be used for the web
application.

Set the debugging parameters:

* Set the Platypus Client debugging port.
* Set the application server debugging port.

Specify the applicaton's default datasource:

* Select the database connecton from the list.

[[project-structure]]
Project structure
-----------------

A Platypus Platform project has the following structure:

* The project configuration files.
* The Application Elements node is the root directory, which contains
the application elements tree.

You can perform the following operations on the application elements and
directories:

* Create a new element using the `New` command.
* Rename an application element. click the selected application element
or directory name, and press the F2 key.
* Copy and Paste an application element from the buffer to the specified
project location using the `Paste` command.
* Copy and Move the directory or the application elements to the
specified project location. To copy, hold the Ctrl key while dragging a
node.
* Delete an application element using the `Delete` command.
* Search for an element in the project using the `Find` command.

These operations also avaliable by the element context menu, Edit menu
in the main menu, or the keyboard hotkeys. Some application elements
nodes supports some specific operations, e.g. running or debugging.
Specific operations are described in detail in the sections dedicated to
the certain types of application elements.

To create a subdirectory in the applicaton tree:

* Select the New item in the parent directory context menu or select the
parent directory and click New File in the main menu, or click the New
File button on the toolbar, or use the hotkey.
* Select the Folder type in the context menu or select Choose file type
Platypus application elements Folder on the wizard first step and click
Next.
* Specify the name of the directory in the Name field and click Finish
to create a directory, or click Cancel to cancel.

To navigate to the application element, if its identifier is known:

* Select File Go to application element, or use the Ctrl Shift G
shortcut.
* In the dialog, specify the identifier of the application element in
the Provide application element id field of the dialog.
* Click OK to navigate to the application element, or click Cancel to
cancel.

To open an application element, select Open in the application element
context menu, or double-click this element. The application element
editor opens as a window in the Platypus Application Designer editors
area.

To find out the identifier of an application element:

* Select an application element in the projects application elements
tree.
* Select File Application element info menu item, or use the Ctrl Shift
I shortcut.

[[running-and-debugging]]
Running and debugging
---------------------

To run an application:

* Click the Run project button on the main toolbar to start a project's
default application element or select Run context menu in an application
element's such as a form, module or an JavaScript file.
* Select Run context menu in an application element's such as a form,
module or an JavaScript file.

To debug an application:

* Set breakpoints in the JavaScript program.
* Click the Debug project button on the main toolbar or select the Debug
item in an application element's context menu. The application will
start and the debugger will be attached.
* After the debugger halts at the breakpoint, see the values of
variables and the call stack. To continue the program running, click the
Continue button on the main toolbar. Use the Step over button or the F8
key, Step into or the F7 key, Step out or the Ctrl F7 shortcut for
step-by-step execution of the program.

If the default application run element is not explicitly specified in
the project's settings the selection dialog will be displayed.

To debug an application running in Apache Tomcat, you should stop server
instance if it is already launched and then start it in debug mode. After the
server starts use Attach Debugger menu item on the Debug Project button
on the main toolbar and specify the debugging port.

When launching the application in a J2EE server, Platypus Application
Designer uses the `web`, `WEB-INF` and `META-INF` sub-directories, which
are created automatically in the project directory. When launching web application theirs initial
structure is created and libraries are copied. After initializing the
directories, files responsible for the configuration (`WEB-INF/web.xml`,
server specific configuration file `META-INF/context.xml`, and JavaScript file responsible for
the application launching on the HTML page) are modified, but the
libraries are not copied again.

Select the Clean directories `web`, `WEB-INF` and Run menu item in the project context menu, if it is
necessary to update the libraries in the `web` and WEB-INF directories. The libraries
will be removed, and at the next application launch these libraries will
be copied from the platform's runtime directory.

[[database-connections]]
Database connections
--------------------

Define an application project's database connections and the default
connection of the application. The default connection to be used when a
connection is not explicitly referenced in application elements.

Add a new database connection:

* Open the Services panel.
* Select the New Connection menu item of the Databases node.
* In the New Connection dialog select the JDBC driver and provide the
JDBC URL, database credentials, scheme and connection name. This name
will be used as an string identifier to refer to the connection JNDI
resource in the application.

A JDBC URL example for the H2 database server with a database located in
the user's home directory `db` subdirectory:
`jdbc:h2:tcp://localhost:9092/~/db`.

Specify the project's default database connection: go to the project's
Properties and to the Running panel. Select the default connection from
the Datasource combobox.

When opening the project, the application designer tries to connect to
the database, in case of failure it switches to the limited
functionality mode, and some editor tools are disabled.

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
*Note*

We recommend that a developer in the team working on the project creates
and uses his/her own copy of the database for debugging and testing
purposes. Additionally, a common reference database is created, and all
modifications, which have passed the debugging stage at the developer's
individual databases, are applied to this common one.
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

Use the developer's local database on the H2 database server, supplied
with the platform.

To launch the built-in H2 database server:

* Open the Services panel.
* Select the Databases H2 node and enable the Start menu item.

After the database server is launched and becomes available via the
network or locally, connect to this server by selecting the Connect to
database item in the context menu of Databases node child node on the Services tab.

To disconnect, select the Disconnect from the same child node of Databases node on the Services tab.

[[version-control]]
Version control
---------------

During application development and further during the application life
cycle, it is recommended to use a version control system to manage the
source project files.

The application designer has built-in support of the following version
control systems:

* Subversion
* Git
* Mercurial

To access options of these version control systems, use the Team item
from the global menu and/or Versioning sub-menu of the project context
menu.

______________________________________________________________________________________________________
*Note*

Refer to the documentation of the relevant version control system for
details about this system usage.
______________________________________________________________________________________________________
