[[platypus-applications-deployment-and-database-migrations]]
Platypus applications deployment and database migrations
--------------------------------------------------------

Deployment is the process of spreading the finished application for
installing or upgrading on the production server. On the production
server, the Platypus application resides entirely in the database or on
the hard drive in the form of a directory.

Migration process ensures maintaining and restoring configuration and
original data in the database.

Platypus applications are provided by the following ways:

* On CD or DVD drive.
* Over the Internet as a zip archive file.

If the Platypus application is delivered as a zip file, unpack its
contents to a location according to your preference on your hard drive.

After unpacking, the directory will have the following structure:

* `appDirectory/`
** `src/`
** `db/`
** `platypus.xml`

The Platypus application directory corresponds to the application
project, which is ready for deployment and execution, as well as for
modification in Platypus Application Designer.

The application directory includes the `platypus.xml` configuration
file, the `src` directory, containing application elements, `db`
directory, containing database migrations, and `project.properties` and
`private.properties` designer configuration files.

The database, in which the application is deployed, includes system
tables and any number of worksheets. When deploying, system tables are
created automatically.

System tables includes the following:

* `MTD_ENTITIES` — this table stores the executable application in the
form of a tree.
* `MTD_USERS` и `MTD_GROUPS` — tables of users and their groups when
working with built-in user space; for additional information, see the
"Security" section.
* `MTD_VERSION` — this table stores information about the current
version of the application data repository.

After deployment in the database each application element is represented
as a single entry in the `MTD_ENTITIES` table.

The command for starting the deployment and database migration utility
is as follows:

-----------------------------
java -jar PlatypusDeploy.jar 
-----------------------------

where OPTIONS is a deployment or migration command and a set of its
parameters.

For the description of commands related to the import deployment
operation and migrations, see sections dedicated to deployment and
database migrations.

.Deployment and migration commands parameters
[cols="<,<",]
|=======================================================================
|Parameter |Description

|`-ap APP_PATH` |Path to the folder containing the finished Platypus
application. If this parameter is not specified, the current directory
will be used.

|`-dbuser DB_USER` |Username for authorization in the database.

|`-dbpassword DB_PASSWORD` |User password for authorization in the
database.

|`-dbschema DB_SCHEMA` |Database scheme.
|=======================================================================

_____________________________________________________________________________________________________________
*Note*

You can also perform actions for deploying and updating applications
using the Platypus Application Designer.
_____________________________________________________________________________________________________________

[[application-database-deployment-and-import]]
Application database deployment and import
------------------------------------------

______________________________________________________________________________
*Important*

Before updating the application, make a backup copy of the operating
database.
______________________________________________________________________________

During the development, the application resides in a drive directory and
it can be run for debugging and testing directly from the drive. For
commercial usage, it is recommended to deploy the application to the
database.

.Application deployment and import commands
[cols="<,<",]
|==============================================================
|Parameter |Description
|`-deploy` |Deploys application from the drive to the database.
|`-undeploy` |Deletes application from the database.
|`-import` |Imports application from the database to the drive.
|==============================================================

If settings of the connection to the database or the Platypus user name
and password are not specified in options, information about the
connection to the database will be read from the `platypus.xml` settings
file of the application folder.

Example of the command for importing an application from the database:

--------------------------------------------------------------------------------------------------------------------------------------------------------
java -jar PlatypusDeploy.jar -import -ap ~/apps/testApp -url jdbc:oracle:thin:@serverHost:1521:adb -dbuser user1 -dbpassword secret -dbschema testschema
--------------------------------------------------------------------------------------------------------------------------------------------------------

Platypus Application Server and Platypus Client do not require
restarting after updating the operating application.

[[database-migrations]]
Database migrations
-------------------

Configuration of the Platypus application database is stored in the form
of successive migrations, which are applied consistently to ensure the
correct operation of schema and data updates in the database. Each
change of the structure or business data is represented as a migration
file with a name corresponding to the change version, starting from 1.
The file name for each new migration is created by adding 1 to the
maximum version number for the application. Two types of migration files
are available:

* Database metadata snapshot with the `.xdm` extension
* A package of SQL commands for adding and/or changing service data with
the `.batch`

.Commands for creating and applying database migrations
[cols="<,<",]
|=======================================================================
|Parameter |Description

|`-apply` |Applies a set of migrations to the database. The migrations
with number greater than the current database version are applied.

|`-undeploy` |Deletes application from the database.

|`-snapshot` |Creates a new migration — a database metadata snapshot;
the database version corresponds to this migration.

|`-batch` |Creates a new empty batch migration; the version of the
database corresponds to this migration.

|`-clean` |Cleans the migration directory by removing migrations which
are not applied.

|`-getver` |Returns the current version of the database.

|`-setver` |Sets the current database version in VERSION — a nonnegative
integer.
|=======================================================================

If settings of the connection to the database or the Platypus user name
and password are not specified in options, information about the
connection to the database will be read from the `platypus.xml` settings
file of the application folder.

When applying migrations to the database, only the latest snapshot of
the database structure is used, as well as all snapshots which were
created immediately before the packages of SQL commands; other migration
files are ignored and can be removed using the `-clean` command.

Example of applying migrations to the database:

------------------------------------------------------
java -jar PlatypusDeploy.jar -apply -ap ~/apps/testApp
------------------------------------------------------
