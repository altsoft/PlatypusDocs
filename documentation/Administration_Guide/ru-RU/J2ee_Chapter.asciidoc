[[работа-серверных-компонентов-platypus-для-работы-в-сервлет-контейнере-или-j2ee-сервере]]
Работа серверных компонентов Platypus для работы в сервлет-контейнере
или J2EE сервере
--------------------------------------------------------------------------------------

___________________________________________________________________________________________________________________________________________________________
*Note*

Используйте Platypus Application Designer для автоматического создания
структуры web-приложения, см. более подробную информацию в Руководстве
разработчика.
___________________________________________________________________________________________________________________________________________________________

Серверные компоненты Platypus могут работать в J2EE
сервлет-контейнере/сервере приложений. Данная конфигурация имеет
следующие особенности:

* серверные компоненты Platypus развертываются в J2EE конетейнер/сервер
как web-приложение — в виде WAR-архива или папки, взаимодействие с
клиентом обеспечивается при помощи специального сервлета;
* возможна работа как HTML5 браузерного клиента так и Java SE клиента
(Platypus Client), так и , а также взаимодействие серверного и
браузерного JavaScript кода из "классического" Web-приложения с
использованием Platypus Web API;
* обмен данными с клиентом происходит по протоколу HTTP/HTTPS;
* возможно использование внешнего сервиса аутентификации пользователей,
например, службы Microsoft Active Directory, что позволяет интегрировать
конечное приложение платформы Platypus в существующее на предприятии
пространство пользователей;
* связь сервера приложений Platypus с БД осуществляется через
настроенный в виде ресурса JNDI источник данных;

Использование Platypus Web API позволяет создавать web-приложения,
использующие в качестве источника данных сервер приложений Platypus.
Web-приложение может строится с использованием технологий ASP, JSP и
прочих. Platypus Web API приложение может осуществлять удаленный вызов
функций серверных модулей, при этом вызов функций является прозрачным
для клиентского JavaScript кода.

[[настройка-web-приложения-и-j2ee-контейнерасервера-приложений]]
Настройка web-приложения и J2EE контейнера/сервера приложений
-------------------------------------------------------------

Для запуска Platypus в J2EE сервлет контейнере или сервере приложений
выполните следующие действия:

* создайте новый каталог, со структурой, стандатной для web-приложения в
J2EE, включая дескриптор развертывания `WEB-INF/web.xml`;
* создайте страницы HTML, на который будет размещено приложение
Platypus; настройте необходимый для начального запуска код JavaScript;
* скопируйте библиотеки, необходимые для работы приложения в каталог
`WEB-INF/lib` web-приложения из подкаталога `bin` каталога платформы
Platypus;
* скопируйте каталог JavaScript HTML5 клиента `pwc`, из подкаталога
`bin` каталога платформы Platypus;
* настройте источник данных JDBC в виде ресурса JNDI, задайте его имя,
например, `jdbc/main`; настройте пул соединений и ресурс JNDI;
скопируйте JAR-файл соответствующего драйвера БД в каталог, доступный
загрузчику классов;
* настройте область безопасности (Realm) для работы со встроенным
хранилищем или внешним сервисом аутентификации; для работы со встроенным
хранилищем настройте область безопасности JDBC для рабты с таблицами
`MTD_USERS` и `MTD_GROUPS` - см. раздел Безопасность.
* настройте параметры развертывания web-приложения в файле
`WEB-INF/web.xml`; при необходимости настройте параметры в специфических
для данного сервера приложений файлах конфигурации;
* разверните web-приложение в J2EE контейнер/сервер приложений в виде
WAR-архива или папки.

____________________________________________________________________________
*Note*

Руководство по настройке J2EE сервера Glassfish 3.1 смотрите в
приложении B.

Руководство по настройке Apache Tomcat 7 смотрите в приложении C.
____________________________________________________________________________

[[kонфигурирование-дескриптора-развертывания-web-приложния]]
Kонфигурирование дескриптора развертывания web-приложния
--------------------------------------------------------

Для конфигурирования web-приложения отредактируйте файл XML дескриптора
развертывания `WEB-INF/web.xml`.

* задайте параметр инициализации с именем `ap` и значением имени пути к
папке приложения Platypus, путь может быть абсолютным или относительным
внутри web-приложения; в случае если web-приложение упаковывается в
war-архив, относительный путь будет работать, если сервер распаковывает
этот архив при разврертывании приложения; в случае, если этот параметр
не задан, приложение будет загружено из базы данных; в приведенном ниже
примере задан абсолютный путь:
+
-------------------------------------------------
...
<context-param>
    <param-name>ap</param-name>
    <param-value>/home/Platypus/app</param-value>
 </context-param>
...
-------------------------------------------------
* задайте параметр инициализации с именем `url` и значением имени JNDI
ресурса источника данных JDBC, например:
+
----------------------------------------
...
<context-param>
    <param-name>url</param-name>
    <param-value>jdbc/main</param-value>
 </context-param>
...
----------------------------------------
* добавьте обработчик события сессии:
+
-------------------------------------------------------
...
<listener>       
    <listener-class>
com.eas.server.httpservlet.PlatypusSessionsSynchronizer
    </listener-class>
</listener>
...
-------------------------------------------------------
* добавьте ссылку на ресурс источика данных:
+
-------------------------------------------------------
...
<resource-ref>
    <description>Main database connection</description>
    <res-ref-name>jdbc/main</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
</resource-ref>
...
-------------------------------------------------------
* добавте конфигурацию сервлета Platypus; в элементе
`multipart/location` укажите путь к папке, в которую должны быть
сохранены загруженные файлы:
+
--------------------------------------------------------
...
<servlet>
    <servlet-name>PlatypusServlet</servlet-name>
    <servlet-class>
com.eas.server.httpservlet.PlatypusHttpServlet
    </servlet-class>
    <load-on-startup>1</load-on-startup>
    <multipart-config>  
      <location>
          /home/user1/pub
      </location>
      <max-file-size>2097152</max-file-size>
      <max-request-size>2165824</max-request-size>
      <file-size-threshold>1048576</file-size-threshold>
    </multipart-config>
  </servlet>
<servlet-mapping>
    <servlet-name>PlatypusServlet</servlet-name>
    <url-pattern>/application/*</url-pattern>
</servlet-mapping>
...
--------------------------------------------------------
* произведите настройки разграничения доступа и безопасности, информацию
по настройке области безопасности смотрите в разделе "Безопасность".

После завершения конфигрурированя разверните web-приложение в виде папки
или WAR-архива в сервлет-контейнер или J2EE сервер.
