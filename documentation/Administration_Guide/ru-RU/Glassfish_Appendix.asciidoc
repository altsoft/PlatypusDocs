[[настройка-j2ee-сервера-glassfish-3]]
Настройка J2EE сервера Glassfish 3
----------------------------------

_______________________________________________________________________________________________________________
*Note*

Для получения подробной информации по настройке Glassfish обратитесь к
документации данного сервера приложений.
_______________________________________________________________________________________________________________

Настройка источника данных:

1.  Скопируйте JAR-файл JDBC драйвера в каталог доступный загрузчику
классов: `glassfish/domains/mydomain/lib`
2.  Запустите консоль администрирования GlassFish. Для этого запустите
сервер, например, используя утилиту asadmin. Далее в браузере перейдите
по адресу `http://hostname:4848`, где hostname - адрес сервера
приложений Glassfish, например: `http://localhost:4848`.
3.  Создайте пул подключений JDBC: Resources -> JDBC -> JDBC Connection
Pools -> New, Тип ресурса `javax.sql.ConnectionPoolDataSource`, а так же
укажите параметры подключения к БД: `url`, `username`, `password`;
4.  Проверьте правильность настройки пула, нажав кнопку Ping;
5.  Создайте JNDI ресурс для пула подключений: Resources -> JDBC
Resources-> New; Задайте имя ресурса, например,`jdbc/main`, и укажите
пул подключений JDBC.

Для того, чтобы настроить Platypus для работы с внутренним хранилищем
данных о пользователях или внешним сервисом аутентификации:

* настройте J2EE сервер Glassfish для работы с областью безопасности
(Realm) во внешнем LDAP сервисе;
* настройте учетные записи пользователей.

Для того, чтобы настроить сервер Glassfish:

* добавьте область безопасности для Glassfish - для этого измените
конфигурацию сервера Configurations -> Server-config -> Security ->
Realms ->New;
+
задайте имя области безопасности, выберите имя класса из списка или
укажите свой класс:
** для использования встроенного хранилища Platypus укажите имя класса
com.sun.enterprise.security.auth.realm.jdbc.JDBCRealm; настройте
свойства, специфические для этого класса:
+
.Свойства области безопасности JDBCRealm
[cols="<,<",]
|=======================================================================
|`JAAS Context` |Идентификатор логин-модуля, JDBCRealm

|`User Table` |Имя таблицы пользователей в БД, MTD_USERS

|`User Name Column` |Имя столбца в таблице пользователей в котором
хранятся имена пользователй, USR_NAME

|`Password Column` |Имя столбца в таблице пользователей в котором
хранятся хэши паролей, USR_PASSWD

|`Group Table` |Имя таблицы групп пользователей, USR_GROUPS

|`Group Name Column` |Имя столбца имен групп в таблице групп
пользователей, GROUP_NAME

|`Digest Algorithm` |Алгоритм хэширования пароля, MD5
|=======================================================================
** Для использования внешнего сервиса LDAP (Active Directory, OpenLDAP и
т.д.) укажите имя класса
com.sun.enterprise.security.auth.realm.ldap.LDAPReam; настройте
свойства, специфические для этого класса:
+
.Основные и дополнительные свойства области безопасности LDAPReam
[cols="<,<",]
|=========================================================
|`JAAS Context` |Идентификатор логин-модуля, ldapRealm
|`Directory` |ldap://server:389
|`Base DN` |DC=ithit,DC=com
|`Assign Groups` |platypus_default_role
|`search-filter` |(&(objectClass=user)(sAMAccountName=%s))
|`search-bind-password` |пароль сервиса LDAP
|`group-search-filter` |(&(objectClass=group)(member=%d))
|`search-bind-dn` |ithit\user
|=========================================================
+
________________________________________________________________________________________________________________________________________________________________________________
*Note*

Задайте значения свойств в соответствии с конфигурацией вашего
LDAP-сервера. Значение свойства `Assign Groups`, группа
platypus_default_role будет присвоена всем пользователям.
________________________________________________________________________________________________________________________________________________________________________________
+
Сконфигурируйте JVM: Configurations -> server-config -> JVM Settings ->
Add JVM Option - добавьте следующую опцию: Djava.naming.referral=follow
* В файле `WEB-INF/glassfish-web.xml` свяжите роли с группами
безопасности:
+
------------------------------------------------
<glassfish-web-app error-url="">
...
  <context-root>/platypus</context-root>
  <security-role-mapping>
    <role-name>platypus_default_role</role-name>
    <group-name>default</group-name>
  </security-role-mapping>
  <security-role-mapping>
    <role-name>role1</role-name>
    <group-name>role1</group-name>
  </security-role-mapping>
  <security-role-mapping>
    <role-name>role2</role-name>
    <group-name>role2</group-name>
  </security-role-mapping>
..
</glassfish-web-app>
------------------------------------------------
